datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

enum Role {
  ADMIN
  USER
}

model User {
  id          String    @id @default(uuid())
  username    String    @unique
  password    String
  tweets      Tweet[]
  role        Role      @default(USER)
  points      Int       @default(0)
  following   Following @relation(fields: [followingId], references: [id])
  followingId Int
  followed    Followed  @relation(fields: [followedId], references: [id])
  followedId  Int
  createdAt   DateTime  @default(now())
}

model Following {
  id        Int    @id @default(autoincrement())
  following User[]
}

model Followed {
  id       Int    @id @default(autoincrement())
  followed User[]
}

model Tweet {
  id          Int           @id @default(autoincrement())
  content     String
  like        Int           @default(0)
  User        User          @relation(fields: [userId], references: [id])
  userId      String
  images      Image[]
  tags        Tag[]
  comments    Comment[]
  createdAt   DateTime      @default(now())
  TagsOnTweet TagsOnTweet[]
}

model Tag {
  id          Int           @id @default(autoincrement())
  tagName     String        @unique
  tweets      Tweet[]
  TagsOnTweet TagsOnTweet[]
}

model TagsOnTweet {
  tweet   Tweet @relation(fields: [tweetId], references: [id])
  tweetId Int
  tag     Tag   @relation(fields: [tagId], references: [id])
  tagId   Int

  @@id([tweetId, tagId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  content   String
  tweet     Tweet?   @relation(fields: [tweetId], references: [id])
  tweetId   Int?
}

model Image {
  id      Int    @id @default(autoincrement())
  src     String
  tweet   Tweet? @relation(references: [id], fields: [tweetId])
  tweetId Int?
}
